name: CI

on:
  push:
    branches:
    - main
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  pull-requests: read

jobs:
  lint:
    name: lint | ${{ matrix.go_version }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go_version: ["1.18", "1.19", "1.20", "1.21"]

    steps:
    - uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go_version }}
    - uses: actions/checkout@v3
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        only-new-issues: true

  test:
    name: test | ${{ matrix.go_version }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go_version: ["1.18", "1.19", "1.20"]

    steps:
    - name: Setup go ${{ matrix.go_version }}
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go_version }}
      id: go

    - name: Checkout code
      uses: actions/checkout@v1

    - name: Make out dir
      run: |
        mkdir out

    - name: Run tests
      run: |
        go test -race ./... -coverprofile=out/coverage.txt -covermode=atomic

    - name: Upload coverage
      uses: codecov/codecov-action@v2
      with:
        files: out/coverage.txt

  # Ensures all matrix jobs complete before passing the build
  complete:
    name: complete
    if: ${{ always() }}
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
    - name: Check that steps completed successfully
      run: |
        [[ "${{ needs.lint.result }}" != "success" ]] && echo "Linting must succeed, received status: ${{ needs.lint.result }}" && exit 1;
        [[ "${{ needs.test.result }}" != "success" ]] && echo "Tests must succeed, received status: ${{ needs.test.result }}" && exit 1;
